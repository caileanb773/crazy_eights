Assignment 2.2 Patchnotes:

--- Card Class ---

-added ImageIcon to represent card's default image
-added parameterized constructor(Rank, Suit)
-added method fetchCardImg(). dynamically determines appropriate representation of card
-added helper methods suitToString() and rankToString() which helps fetchCardImg() instead of having duplicate code
-added setters, getters, and a toString()

--- Player Class ---

-added fields isHuman:boolean and orientation:int which are used to determine certain events in the model and view, respectively
-added parameter "orientation" to Player parameterized constructor
-moved drawCard() to the model
-renamed addCard() and playCard() to addCardToHand() and removeCardFromHand()
-added method clearHand() as helper method for the model during cleanup step
-added setters, getters, and a toString()

--- AIPlayer Class ---

-changed parameterized constructor to match Player's new constructor
-renamed method decideMove() to decideCard()
-added method chooseSuit() as helper method for when the AI plays an eight

--- GameController Class ---

-added method run() which displays the splash, then the main application, then initializes all buttons
-renamed method actionPerformed() to handleCardActions()
-moved checkForWinner() to model
-refactored startNewGame() to handleStartRound() and moved other functionality to model
-removed joinMultiPlayerGame(), not needed yet
-moved handleSoundToggle() to the view (part of UI)
-moved changeLanguage() to the view (part of UI)
-added method processTurn() from the model, as during the course of the turn the UI needs to be updated almost constantly

--- GameModel Class ---

-added fields aiNames, roundWinner, gameWinner, isGameRunning, cardRedirection, numTwosPlayed, currentTurn
-removed method processTurn()
-renamed method checkRoundOver() to isRoundOver()
-renamed method checkWinCon() to isGameOver()
-renamed method resetGame() to cleanupGameState()
-renamed method checkPlay() to isPlayLegal()
-added methods:
	-initGame()
	-clearGame()
	-instantiateDeck()
	-shuffleDeck()
	-createCPUOpponent
	-loadAINames()
	-getAIPlayerName()
	-reshuffleSpentDeck()
	-playCard()
	-drawCard()
	-isPlayLegal()
	-applySpecialAction()
	-playAce(), playTwo(), playFour(), playEight, playQueen()
	-tallyScores()
	-getWinningPlayer()
	-getNextPlayer()
	-peekNextPlayer()
	-getters and setters
	
--- GameView Class ---

-moved all constants to a separate class
-moved all JPanels and JLabels created in drawMainApplication() to class as fields (they need to be accessible to be updated)
-renamed drawMainApplication() to drawMainWindow()
-added constructor
-added method drawSplash()
-added method resizeWindow(), the window needs to be resized when a new game is created to fit all the cards on screen
-added getter getMyFont() which retrieves the custom font used for various UI elements
-renamed updatePlayedCard() to displayLastCardPlayed()
-renamed updatePlayerArea() to displayCardsInHand()
-added method updatePlayerNames()
-renamed updateConsole() to updateScoreTable() and refreshScores()
-added method refreshView()
-added method displayRules()
-added methods displayRoundWinner(), displayGameWinner()
-added method getPlayerName() which prompts a player to enter their name and assigns default names in certain scenarios
-added method dialogEightSuit() for choosing the suit when an eight is played
-added method sendChatMsg()
-added method fetchChatMsg()
-added method setLanguageToEnglish() and setLanguageToFrench()
-added method repaintTranslatable() which refreshes components that have text that is part of the UI
-added getters and methods to set listeners

################################################################################

Assignment 3.2 Patchnotes:

-moved the Server and Client from the Model to the Controller. This was a typo and they should have been in the controller to begin with
-added method gatherNetworkInfo() to controller
-added "port" and "ip" fields to controller
-added method awaitConnectionsDialog() in view
-added mathod cancelHosting() to controller
-added method shutdown() to gameserver
-renamed onplayerjoined to onplayerconnected() in gamecontrollerlistener
-added field acceptThread in gameserver
-added field connectionStatus in gameview
-added method updateWaitingStatus() in gameview
-added method shutdown() to gameclient
-added method ongamestateupdated() to gamecontrollerlistener
-added method closewaitingdialog() to view
-added private class clienthandler in gameserver to handle incoming packets from connected clients
-added field receiveThread in gameclient, for listening to incoming chat messages
-added simpledateformat field to controller to add timestamps to chat messages
-added method gameStartDialog() to the view
-added field playerName in controller
-added field numHumanPlayers in controller
-added getter for the size of the vector of connected players in server
-added Player(String) constructor to Player and AIPlayer
-added method getClientNames() in server
-added clientNames to server class
-changed client constructor to take a string parameter playername
-added method getcardfromString() to card
-added method onviewrefresh() to controller/listener
-added method refreshclienthand() to view (less complicated method)
-added method refreshopponenthands() to view
-added private helper method for refreshopponenthands to cut down duplicate code
-added method refreshclientscoretable() and helper method in view
-added setter for orientation in player
-added method processconsolemsg() to controller so the host can blast it to all players as well as itself
-split sendMove() into sendDraw() and sendPlay() in client
-added setter for hand in player
-added method onmovereceived() to gamecontrollerlistener
-added getter for connected clients in server
-overloaded isPlayLegal() in gamemodel()
-added setter for the last played card to model
-added field nextclientid in server
-added new field gamemode to controller
-added new method removeCardFromHand() to gameview
-added field BOOLEAN isHost in player
-added getter and setter for isHost
-removed method onplayermove() from listener interface, split into play/draw methods instead
-added method getHost() to the model
-added method broadcastRoundWinner() to server
-removed methods startGame() and createServer() from server
-added overloaded displayRoundWinner(String name) in view
-card counts are now displayed with player names in the game area, instead of the score box. all information in one place
-added method requestSuitChoice() to server; sends a jdialog popup to a single client whenever they play an 8
-added method endMultiPlayerGame() in controller
-added method endmultiplayerround() in controller